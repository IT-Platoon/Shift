# Generated by Django 4.2.2 on 2023-06-24 18:44

import apps.projects.models.model_process
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields

from .constants import DEFAULT_TASKS


def create_default_tasks(apps, schema_editor):
    Task = apps.get_model('projects', 'Task')
    if not Task.objects.exists():
        Task.objects.bulk_create(
            [
                Task(**task_data)
                for task_data in DEFAULT_TASKS
            ],
        )


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16, verbose_name='Код задачи')),
                ('name', models.CharField(max_length=256, verbose_name='Код задачи')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Name project')),
                ('members', models.ManyToManyField(related_name='projects_member', to=settings.AUTH_USER_MODEL, verbose_name='List users, that consist in project')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL, verbose_name='Owner of project')),
                ('want_to_enter', models.ManyToManyField(related_name='want_to_enter', to=settings.AUTH_USER_MODEL, verbose_name='List users, that want to enter to project')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
            },
        ),
        migrations.CreateModel(
            name='ModelProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('request_file', models.FileField(upload_to=apps.projects.models.model_process.user_directory_path_request, verbose_name='Loaded file')),
                ('graphic', models.JSONField(blank=True, null=True, verbose_name='Model response')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='projects.project', verbose_name='Analyzed project')),
            ],
            options={
                'verbose_name': 'Информация о модели',
                'verbose_name_plural': 'Информации о моделях',
            },
        ),
        migrations.RunPython(create_default_tasks),
    ]
